#summary automated intrusion discovery for linux, osx, and windows

= Introduction =

RapidTriage quickly and automatically collects critical information from key areas of the operating system to assist information security incident handlers in determining whether or not there has been compromise. Often this process of collecting information is manual and time consuming particularly when multiple systems are suspect. RapidTriage may be deployed to many systems and the results analyzed relative to each other to help the incident handler prioritize where to focus their containments efforts. Frequently, the incident handler does not have immediate access or authorization to the systems in question and getting it setup can be time consuming. RapidTriage can be quickly provided to authorized system administrators to collect the critical information many times used to help identify a compromise. Beside speed to deploy and overcoming access barriers, the other major benefits of using RapidTriage include:

  # consistency in the data collected across multiple systems and in a uniform output format
  # a single script for multiple operating systems
  # easy modification of commands to run or log files to collect


= Details =

*_Usage:_*
{{{
python RapidTriage.py [aflnptu] [options] -o <filename>

-o <filename> - specified file will contain the results of the RapidTriage

One or more of the following (required):
  	-a	collect information from all areas
 	-f	collect filesystem related information (e.g. unusual files)
	-l	collect histories and log data
	-n	collect network statistics and configuration information
	-p	collect process, service, and module information
	-t	collect scheduled task information
	-u	collect user account and configuration information
}
Options:
	-m	Generate an md5 hash of the results file (<filename>) and place in <filename>-hash 
}}}

*_Tested Python Version:_* 2.7

*_Tested Operating Systems_*
  * Linux (2.6)
  * OSX (Mountain Lion or newer)
  * Windows (Windows 7 or newer)

Note: Python is not installed by default in Windows. For suspect Windows systems where Python is not installed considering using the “py2exe” “Distutils” extension to convert RapidTriage into an executable Windows program. Then have the system administrators execute the RapidTriage.exe program to collect the desired information.
	
	RapidTriage.exe [aflnptu] [options] -o `<filename>`

*_Changing what is collected and how:_*

Many sections of the script include lists of commands and a description. To add or modify the commands that are used to collect information simply use the following format:

	`<description>::<command>`

Make sure to modify the list corresponding to the appropriate operating type. For example, to modify the network information collected for a Linux system find and change the network "cmds" list using the above syntax:

{{{
############################################## 
#
#	Network Information		     
#
##############################################
	""")

		# Linux, Windows,and OSX Network Related Commands
		#
		#	This list can easily be modified to include additional commands. Use 
		#      the "<description>::<command>" format when adding or modifying.
		#
		#	|	|	|
		#	V	V	V
		#
	if os_type is "linux":
		cmds = [
		'Network Interface Configuration::ifconfig -a',
		'Network Interfaces in Promiscuous Mode::ip link |grep PROMISC',
		'Route Table::netstat -rn',
		'Firewall Configuration::iptables -L',
		'ARP Table::arp -e',
		'Listening Ports and Associated Command::lsof -i',
		'Active Network Connections::netstat -natp',
		'Count of Half Open Connections::netstat -ant |grep "svn_recv" |wc -l',
		'Count of Open Connections::netstat -ant |grep "established" |wc -l',
		'/etc/hosts Contents::cat /etc/hosts'
		]
}}}